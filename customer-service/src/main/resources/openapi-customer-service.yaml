openapi: 3.0.3
info:
  title: Swagger Customer - OpenAPI 3.0
  description: |-
    <div style="text-align: justify;">
      <h3>Maestría en Software - Patrones de Diseño de APIS</h3>
      <h3>Proyecto Final - Grupo 2</h3>
      <img src="https://blogposgrados.ups.edu.ec/hs-fs/hubfs/Logo-Posgrados.png?width=1517&height=262&name=Logo-Posgrados.png" alt="Image" align="right" width="400"/>
      <p>This is a contract to manage customer data based on the OpenAPI 3.0 specification.This is a contract that uses the API First-Contract principle to standardize the creation of endpoints to be used in our service and improve the development of our APIs.</p> 
    </div>
  termsOfService: http://swagger.io/terms/
  contact:
    email: cherrerad@est.ups.edu.ec
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0 - SNAPSHOT

externalDocs:
  description: Historias de usuario
  url: https://github.com/users/AndresUPS93/projects/3/views/1

servers:
  - url: http://localhost:8084/api/v1
    description: service
  - url: http://localhost:8081/api/v1
    description: api-middleend
  - url: http://localhost:8080/api/v1
    description: api-gateway

tags:
  - name: customer
    description: Everything about customers

paths:
  /customers:
    post:
      tags:
        - customer
      summary: Create a new customer
      description: Create a new customer with an Unique ID
      operationId: createCustomer
      parameters:
        - name: x-sw-client-request-id
          in: header
          description: Unique ID for the request
          required: true
          schema:
            type: string
        - name: x-sw-client-user-agent
          in: header
          description: Type of device that consume Endpoint
          required: true
          schema:
            type: string
        - name: x-sw-create-user
          in: header
          description: Audit username create record
          required: true
          schema:
            type: string
      requestBody:
        description: Created customer object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
        '400':
          description: the server could not understand the request because of incorrect syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers/{id}:
    get:
      tags:
        - customer
      summary: Get a customer by ID
      description: Get a customer based on its ID
      operationId: getCustomer
      parameters:
        - name: x-sw-client-request-id
          in: header
          description: Unique ID for the request
          required: true
          schema:
            type: string
        - name: x-sw-client-user-agent
          in: header
          description: Type of device that consume Endpoint
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: client ID to search for
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: client was successfully obtained
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
        '204':
          description: the client was not found in the records
        '400':
          description: the server could not understand the request because of incorrect syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CustomerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        identification:
          type: string
          maxLength: 13
          pattern: "^[0-9]+$"
          description: Identification must contain only numbers with a max length of 13 digits.
        firstName:
          type: string
          pattern: "^[a-zA-Z\\s]+$"
          description: First name must contain only letters and spaces.
        lastName:
          type: string
          pattern: "^[a-zA-Z\\s]+$"
          description: Last name must contain only letters and spaces.
        genre:
          type: string
          enum:
            - MALE
            - FEMALE
        createUser:
          type: string
          description: Audit username create record
        createDate:
          type: string
          format: date-time
          description: Audit date create record
        active:
          type: boolean
          description: Audit status record
      required:
        - identification
        - firstName
        - lastName
        - genre
    Error:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        status:
          type: integer
    ErrorDetail:
      type: object
      properties:
        message:
          type: string