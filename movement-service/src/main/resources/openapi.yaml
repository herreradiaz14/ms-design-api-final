openapi: 3.0.3
info:
  title: Swagger Movement - OpenAPI 3.0
  description: |-
    <div style="text-align: justify;">
      <h3>Maestría en Software - Diseño de patrones de API</h3>
    
      <img src="https://blogposgrados.ups.edu.ec/hs-fs/hubfs/Logo-Posgrados.png?width=1517&height=262&name=Logo-Posgrados.png" alt="Image" align="right" width="400"/>
    
      <p>This is a contract to manage movement data based on the OpenAPI 3.0 specification.This is a contract that uses the API First-Contract principle to standardize the creation of endpoints to be used in our service and improve the development of our APIs.</p> 
    </div>
  termsOfService: http://swagger.io/terms/
  contact:
    email: agarciam2@est.ups.edu.ec
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0 - SNAPSHOT

externalDocs:
  description: Historia de usuario
  url: https://github.com/users/AndresUPS93/projects/3?pane=issue&itemId=81452020

servers:
  - url: http://localhost:8086/api/v1
    description: service
  - url: http://localhost:8080/api/v1
    description: api-gateway

tags:
  - name: movement
    description: Everything about movements

paths:
  /movements:
    post:
      tags:
        - movement
      summary: Create a new movement
      description: Create a new movement with an Unique ID
      operationId: createMovement
      parameters:
        - name: x-cm-client-request-id
          in: header
          description: Unique ID for the request
          required: true
          schema:
            type: string
        - name: x-cm-client-user-agent
          in: header
          description: Type of device that consume the endpoint
          required: true
          schema:
            type: string
      requestBody:
        description: Created movement object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementDto'
      responses:
        '201':
          description: succesfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementDto'
        '400':
          description: The server could not understand the request because of incorrect syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    MovementDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        typeMovement:
          type: string
          enum:
            - DEPOSITO
            - RETIRO
        amount:
          type: number
        accountId:
          type: integer
          format: int64

      required:
        - typeMovement
        - amount
        - accountId
    Error:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        status:
          type: integer
    ErrorDetail:
      type: object
      properties:
        message:
          type: string